-module(debug_tests).

-include_lib("test/erlang_types/erlang_types_test_utils.hrl").

% ast_test() ->
%   % ensure all modules are loaded (takes ~20ms)
%   ?LOAD,
%   with_symtab(fun() -> 
%     Ty = tnamed_ns(ast, ty, []),
%     {Time, _} = timer:tc(fun() -> 
%       % uncomment to get a trace for profiling
%       % fprof:trace(start),
%       ty_parser:parse(Ty),
%       % fprof:trace(stop), fprof:profile(), fprof:analyse(),
%       ok
%     end),
%     true = (Time < 20000), % should be less than 20ms
%     % io:format(user,"parse> ~p ms~n", [Time/1000]),
%     ok
%   end, system("test_files/erlang_types/system_ast")).


% execute with rebar3 eunit --generator debug_tests:slow_test_
% only here for debugging systems generated by the property-based tests
% slow_test_() ->
%   {timeout, 60, fun() -> slow_case(), ok end}.
%
% slow_case() ->
%   ?LOAD,
%   System = system("test_files/erlang_types/system_ast"),
%
%   with_symtab(fun() -> 
%     AllNames = [Ref  || Ref := _AstTy <- System],
%     [begin 
%        {Time, Ty} = timer:tc(fun() -> 
%           TT = tnamed_ns(Ns, Name, []),
%           Z = ty_parser:parse(TT),
%           Z 
%                              end),
%        io:format(user,"~p parse> ~p ms~n", [Name, Time/1000]),
%        {Time2, _} = timer:tc(fun() -> 
%        ty_node:is_empty(Ty) end),
%        io:format(user,"~p is_empty> ~p ms~n", [Name, Time2/1000])
%     end || {_, Ns, Name, 0} <- AllNames],
%
%     ok
%   end, System).
